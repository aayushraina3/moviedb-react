{"version":3,"sources":["components/SearchBar.js","components/MovieCard.js","components/Movies.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","handleInputChange","event","props","onSearch","target","value","className","InputGroup","FormControl","placeholder","name","onChange","this","Feedback","as","Component","MovieCard","Card","Img","variant","src","search","Poster","Body","Title","Text","Button","onClick","inProgress","alert","Movies","state","isLoading","searchList","error","fetchMovies","fetch","searchTerm","then","res","json","result","setState","Search","prevProps","length","Container","Row","map","index","Col","md","App","handleSearch","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRAGqBA,E,4MACjBC,kBAAoB,SAACC,GACjB,EAAKC,MAAMC,SAASF,EAAMG,OAAOC,Q,4CAKrC,WACI,OACI,qBAAKC,UAAU,iBAAf,SACI,qBAAKA,UAAU,iBAAf,SACI,eAACC,EAAA,EAAD,CAAYD,UAAU,kBAAtB,UACI,cAACE,EAAA,EAAD,CACIC,YAAY,SACZ,aAAW,SACX,mBAAiB,aACjBC,KAAK,YACLC,SAAUC,KAAKZ,oBAKnB,cAACQ,EAAA,EAAYK,SAAb,CAAsBC,GAAG,MAAzB,kD,GAtBeC,a,wCCAxB,SAASC,EAAUd,GAC9B,OACI,sCACI,eAACe,EAAA,EAAD,CAAMX,UAAU,aAAhB,UACI,cAACW,EAAA,EAAKC,IAAN,CAAUZ,UAAU,cAAca,QAAQ,MAAMC,IAAKlB,EAAMmB,OAAOC,SAClE,eAACL,EAAA,EAAKM,KAAN,CAAWjB,UAAU,YAArB,UACI,cAACW,EAAA,EAAKO,MAAN,CAAYlB,UAAU,aAAtB,SAAoCJ,EAAMmB,OAAOG,QACjD,cAACP,EAAA,EAAKQ,KAAN,IAEA,cAACC,EAAA,EAAD,CAAQC,QAASC,EAAYtB,UAAU,cAAca,QAAQ,SAA7D,gCAOpB,SAASS,IACLC,MAAM,mB,IChBWC,E,4MACjBC,MAAQ,CACJC,WAAW,EACXC,WAAY,GACZC,MAAO,M,EAgBXC,YAAc,WACVC,MAAM,8CAAD,OAA+C,EAAKlC,MAAMmC,aAC1DC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACG,SAACG,GACG,EAAKC,SAAS,CAAET,WAAYQ,EAAOE,OAAQX,WAAW,OAE1D,SAACE,GACG,EAAKQ,SAAS,CAAER,c,uDArBhC,WACItB,KAAKuB,gB,gCAGT,SAAmBS,GAGXA,EAAUP,aAAezB,KAAKV,MAAMmC,YAAczB,KAAKV,MAAMmC,WAAWQ,QAAU,IAClFjC,KAAK8B,SAAS,CAAEV,WAAW,EAAMC,WAAY,GAAIC,MAAO,OACxDtB,KAAKuB,iB,oBAiBb,WACI,IAAQF,EAAerB,KAAKmB,MAApBE,WAER,OAAIrB,KAAKV,MAAMmC,WAAWQ,QAAU,EAC5BZ,EAEI,cAACa,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACKd,EAAWe,KAAI,SAAC3B,EAAQ4B,GACrB,OACI,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,UACI,cAACnC,EAAD,CAAWK,OAAQA,IADvB,MAAiB4B,WAUR,IAAzBrC,KAAKmB,MAAMC,UAEP,6CAMA,yEASR,aADA,CACA,c,GAtEoBjB,aCEfqC,E,4MACnBrB,MAAQ,CAGNM,WAAY,I,EAGdgB,aAAe,SAAChB,GACd,EAAKK,SAAS,CAGZL,WAAYA,K,4CAIhB,WAGE,OAFAiB,QAAQC,IAAI3C,KAAKmB,OAGf,qCACE,cAAC,EAAD,CAAW5B,SAAUS,KAAKyC,eAC1B,cAAC,EAAD,CAAQhB,WAAYzB,KAAKmB,MAAMM,oB,GArBNtB,aCMlByC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d964690c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { InputGroup, FormControl } from 'react-bootstrap';\n\nexport default class SearchBar extends Component {\n    handleInputChange = (event) => {\n        this.props.onSearch(event.target.value)\n\n        // if(event.target.value) \n    }\n\n    render() {\n        return (\n            <div className=\"search-section\">\n                <div className=\"search-bar-div\">\n                    <InputGroup className=\"mb-3 search-bar\">\n                        <FormControl\n                            placeholder=\"Search\"\n                            aria-label=\"Search\"\n                            aria-describedby=\"search-bar\"\n                            name=\"SearchVal\"\n                            onChange={this.handleInputChange}\n                        />\n                        {/* <Button variant=\"outline-secondary\" id=\"button-addon2\">\n                    Button\n                </Button> */}\n                        <FormControl.Feedback as=\"div\">Type something to search.</FormControl.Feedback>\n                    </InputGroup>\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport { Card, Button } from 'react-bootstrap';\n\nexport default function MovieCard(props) {\n    return (\n        <div>   {/*key={props.key}*/}\n            <Card className=\"movie-card\">\n                <Card.Img className=\"card-banner\" variant=\"top\" src={props.search.Poster} />\n                <Card.Body className=\"card-body\">\n                    <Card.Title className=\"card-title\">{props.search.Title}</Card.Title>\n                    <Card.Text>\n                    </Card.Text>\n                    <Button onClick={inProgress} className=\"card-button\" variant=\"danger\">Read More</Button>\n                </Card.Body>\n            </Card>\n        </div>\n    );\n}\n\nfunction inProgress(){\n    alert(\"Under progress!\");\n}","import React, { Component } from 'react';\nimport { Col, Container, Row } from 'react-bootstrap';\nimport MovieCard from './MovieCard';\n\nexport default class Movies extends Component {\n    state = {\n        isLoading: false,\n        searchList: [],\n        error: null\n    }\n\n    componentDidMount() {\n        this.fetchMovies();\n    }\n\n    componentDidUpdate(prevProps) {\n        //console.log(this.props.searchTerm);\n\n        if (prevProps.searchTerm !== this.props.searchTerm && this.props.searchTerm.length >= 3) {\n            this.setState({ isLoading: true, searchList: [], error: null });\n            this.fetchMovies();\n        }\n    }\n\n    fetchMovies = () => {\n        fetch(`https://www.omdbapi.com/?apikey=aea3bc9d&s=${this.props.searchTerm}`)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.setState({ searchList: result.Search, isLoading: false })\n                },\n                (error) => {\n                    this.setState({ error })\n                }\n            )\n    }\n\n    render() {\n        const { searchList } = this.state\n\n        if (this.props.searchTerm.length >= 3) {    //searchList && - ensured searchList is not empty\n            if (searchList) {\n                return (\n                    <Container>\n                        <Row>\n                            {searchList.map((search, index) => {\n                                return (\n                                    <Col md={3} key={index}>\n                                        <MovieCard search={search} /> {/* key={index} */}\n                                    </Col>\n                                )\n                            })}\n                        </Row>\n                    </Container>\n                )\n            } else {\n\n                if (this.state.isLoading === true) {\n                    return (\n                        <div>\n                            Loading...\n                        </div>\n                    )\n                } else {\n                    return (\n                        <div>\n                            No results found! Type something else.\n                        </div>\n                    )\n                }\n            }\n        } else {\n            return (\n                // <div>Search something :)</div>\n                <div></div>\n            )\n        }\n    }\n}\n","import React, { Component } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport SearchBar from './components/SearchBar';\nimport Movies from './components/Movies';\n\nexport default class App extends Component {\n  state = {\n    //error: null,\n    //searchList: [],\n    searchTerm: \"\"\n  }\n\n  handleSearch = (searchTerm) => {\n    this.setState({\n      //...this.state,\n      //searchList: searchResults\n      searchTerm: searchTerm\n    })\n  }\n\n  render() {\n    console.log(this.state);\n\n    return (\n      <>\n        <SearchBar onSearch={this.handleSearch} />\n        <Movies searchTerm={this.state.searchTerm}/>\n      </>\n    )\n  }\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}